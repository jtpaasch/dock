#!/usr/bin/env bash
#
# DOCK
# Installs the `dock` tool and its associated configuration files.
#
# Author JT Paasch
# License MIT <http://opensource.org/licenses/MIT>
# 

# A function to display usage.
function usage {
    echo "Installs the dock tool."
    echo ""
    echo "USAGE:"
    echo "  ./install"
    echo ""
    echo "OPTIONS:"
    echo "  -h --help            Display help."
    echo "  --with-local-docker  Install a proxy `docker` command too."
    echo ""
}

# Parse the arguments.
while (( "$#" )); do
    case $1 in

        # A --help option.
        -h|--help)  usage
                    exit 1
                    ;;

        # A --with-local-docker option.
        --with-local-docker)  WITH_LOCAL_DOCKER="true"
                              ;;

        # Anything is unrecognized.
        *)  echo "Unrecognized argument: $1"
            exit 1
            ;;

    esac
    shift
done

# Where is the config kept?
CONFIG_DIR=$HOME/.dock.d

# Let the user know what's happening.
echo "Installing..."

# Does the config folder already exist?
if [ -d $CONFIG_DIR ]; then

    # Destroy the VM, in case it already exists.
    ORIGINAL_PWD=`pwd`
    cd $CONFIG_DIR
    echo "-- clean up old VMs..."
    vagrant destroy --force >/dev/null
    cd $ORIGINAL_PWD

    # Now get rid of the config directory.
    echo "-- deleting config from $CONFIG_DIR..."
    rm -rf $CONFIG_DIR

fi

# Now create a new config folder and copy the config to it.
echo "-- copying config to $CONFIG_DIR..."
mkdir -p $CONFIG_DIR
cp -r Vagrantfile $CONFIG_DIR

# Install the `dock` script as a regular shell command.
echo "-- install dock to /usr/local/bin"
sudo install dock /usr/local/bin

# If the WITH_LOCAL_DOCKER option was selected,
# install the `docker` proxy script as a regular shell command too.
if [[ "$WITH_LOCAL_DOCKER" == "true" ]]; then
    echo "-- install docker proxy to /usr/local/bin"
    sudo install docker /usr/local/bin
fi

# We're done.
echo "-- done"
